# dbt_project.yml
# -----------------------------------------------------------------
# This is the main configuration file for Ledgerline.
# Here we define the project name, version, where the models live,
# how they should be materialized, and other global behaviors.
# -----------------------------------------------------------------

# ==============================================================================
# Project Config
# ==============================================================================

name: 'ledgerline'
version: '1.0.0'
config-version: 2

vars:
  default_billing_currency: 'USD'

profile: 'ledgerline'

model-paths: ['models']
analysis-paths: ['analyses']
test-paths: ['tests']
seed-paths: ['seeds']
macro-paths: ['macros']
snapshot-paths: ['snapshots']
clean-targets:
  - 'target'
  - 'dbt_packages'

quoting:
  database: false
  schema: false
  identifier: false


# ==============================================================================
# Models
# ==============================================================================

models:
  ledgerline:
    +persist_docs: {relation: true, columns: true}  # Keeps column and model descriptions visible in dbt docs.
    +meta:
      owner: 'Matthew Tripodi'
      sla_hours: 24

    # ---------------------------------------------------------------------------------
    # Staging
    # ---------------------------------------------------------------------------------
    # Ephemeral layer.
    # Lightly adapts raw inputs as CTEs to feed history, keeping cost and clutter down.
    # ---------------------------------------------------------------------------------

    staging:
      +schema: staging
      +materialized: view


    # --------------------------------------------------------------------------
    # History
    # --------------------------------------------------------------------------
    # Change-tracking layer. Captures OPEN rows from staging, closes them when
    # missing, and applies SCD-2 via macros. Uses append by default, with merge
    # for usage facts. Ignores schema drift to keep history a stable contract.
    # --------------------------------------------------------------------------

    history:
      +schema: history

      +materialized: incremental
      +incremental_strategy: append
      +on_schema_change: ignore


    # --------------------------------------------------------------------------
    # Refined
    # --------------------------------------------------------------------------
    # Cleaned and enriched layer.
    # Standardized models shaped for reuse and feeding downstream marts.
    # --------------------------------------------------------------------------

    refined:
      +schema: refined
      +materialized: table


    # --------------------------------------------------------------------------
    # Marts
    # --------------------------------------------------------------------------
    # Curated, business-facing models.
    # Contracts act as a quality gate, enforcing declared columns and types.
    # --------------------------------------------------------------------------

    marts:
      +materialized: table

      usage:
        +schema: marts_usage
        +contract: {enforced: true}

        eda:
          +contract: {enforced: false}


# ==================================================================================
# Seeds
# ==================================================================================
# Static CSVs for small lookups.
# In dev and CI, seeds land in <target.schema>_seeds (default dbt naming).
# In prod, seeds are disabled via target.name so they do not exist.
# ==================================================================================

seeds:
  +enabled: "{{ target.name != 'prod' }}"   # no seeds in prod
  +schema: seeds                            # dev/ci - <target.schema>_seeds

  ledgerline:
    +quote_columns: false

    # --------------------------------------------------------------------------
    # atlas_crm_customer_info
    # --------------------------------------------------------------------------

    atlas_crm_customer_info:
      +column_types:
        customer_code: varchar
        customer_name: varchar
        country_code: varchar
        load_ts: timestamp_ntz

      +post-hook:
        - "update {{ this }} set load_ts = to_timestamp_ntz('{{ run_started_at }}') where load_ts is null"

      +tags: ['catalog']


    # --------------------------------------------------------------------------
    # atlas_catalog_product_info
    # --------------------------------------------------------------------------

    atlas_catalog_product_info:
      +column_types:
        product_code: varchar
        product_name: varchar
        category: varchar
        load_ts: timestamp_ntz

      +post-hook:
        - "update {{ this }} set load_ts = to_timestamp_ntz('{{ run_started_at }}') where load_ts is null"

      +tags: ['catalog']


    # --------------------------------------------------------------------------
    # atlas_catalog_plan_info
    # --------------------------------------------------------------------------

    atlas_catalog_plan_info:
      +column_types:
        plan_code: varchar
        plan_name: varchar
        product_code: varchar
        billing_period: varchar
        load_ts: timestamp_ntz

      +post-hook:
        - "update {{ this }} set load_ts = to_timestamp_ntz('{{ run_started_at }}') where load_ts is null"

      +tags: ['catalog']


    # --------------------------------------------------------------------------
    # atlas_currency_info
    # --------------------------------------------------------------------------

    atlas_currency_info:
      +column_types:
        currency_code: varchar
        currency_name: varchar
        decimal_digits: number
        load_ts: timestamp_ntz

      +post-hook:
        - "update {{ this }} set load_ts = to_timestamp_ntz('{{ run_started_at }}') where load_ts is null"

      +tags: ['catalog']


    # --------------------------------------------------------------------------
    # atlas_country_info
    # --------------------------------------------------------------------------

    atlas_country_info:
      +column_types:
        country_code: varchar
        country_name: varchar
        load_ts: timestamp_ntz

      +post-hook:
        - "update {{ this }} set load_ts = to_timestamp_ntz('{{ run_started_at }}') where load_ts is null"

      +tags: ['catalog']


    # --------------------------------------------------------------------------
    # atlas_price_book_daily
    # --------------------------------------------------------------------------

    atlas_price_book_daily:
      +column_types:
        product_code: varchar
        plan_code: varchar
        price_date: date
        unit_price: number(18,6)
        load_ts: timestamp_ntz

      +post-hook:
        - "update {{ this }} set load_ts = to_timestamp_ntz('{{ run_started_at }}') where load_ts is null"

      +tags: ['catalog']


    # --------------------------------------------------------------------------
    # atlas_meter_usage_daily
    # --------------------------------------------------------------------------

    atlas_meter_usage_daily:
      +column_types:
        customer_code: varchar
        product_code: varchar
        plan_code: varchar
        report_date: date
        units_used: number
        included_units: number
        load_ts: timestamp_ntz

      +post-hook:
        - "update {{ this }} set load_ts = to_timestamp_ntz('{{ run_started_at }}') where load_ts is null"

      +tags: ['usage']
      
flags:
  require_generic_test_arguments_property: true